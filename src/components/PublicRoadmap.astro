---
import { Badge, Icon } from '@astrojs/starlight/components';
import { type BadgeComponentProps } from 'node_modules/@astrojs/starlight/schemas/badge';

import Upvote, { PUBLIC_ROADMAP_ENDPOINT } from './Upvote';
import Feedback from './Feedback';

interface Task {
  id: string;
  name: string;
  description: string;
  status: string;
}

const tasks: Task[] = await fetch(PUBLIC_ROADMAP_ENDPOINT).then(res => res.json());
---

<ul class="roadmap-list">
  {tasks.map(({ id, name, description, status }) => {
    let variant: BadgeComponentProps["variant"] = 'note';
    if (status === 'in-progress') variant = 'caution';
    if (status === 'considering') variant = 'tip';
    
    return (<li id={id}>
      <article class="row">
        <Badge text={status} variant={variant} class="badge" />
        <p class="title"><strong>{name}</strong></p>
        <pre class="description">{description}</pre>
        <div class="actions">
          <Upvote id={id} client:load>
            <Icon name="up-caret" size="1.25rem" />
          </Upvote>
          <Feedback id={id} client:load>
            <Icon name="right-arrow" size="1.25rem" />
          </Feedback>
        </div>
      </article>
    </li>)
})}
</ul>

<style>
  .roadmap-list {
    padding-left: 0;
  }
  
  .roadmap-list li {
    list-style: none;
  }
  
  .row {
    position: relative;
    padding: 16px;
    padding-right: 124px;
    border: 1px solid #eaeaea;
    margin: 16px 0;
  }

  .badge {
    position: absolute;
    top: 16px;
    right: 16px;
    font-family: var(--__sl-font-mono);
    font-size: var(--sl-text-sm);
    border-radius: 0px;
  }

  .title {
    text-wrap: balance;
  }

  .row > .description {
    border: none;
    padding: 0;
    margin: 16px 0;
    white-space: pre-wrap;
  }

  .row > .actions {
    display: flex;
    align-items: center;
    gap: 8px;
  }
</style>